import{_ as s,c as i,o as a,V as t}from"./chunks/framework.heQuCCy3.js";const g=JSON.parse('{"title":"样式","description":"","frontmatter":{},"headers":[],"relativePath":"front/style.md","filePath":"front/style.md","lastUpdated":1705459633000}'),n={name:"front/style.md"},l=t(`<h1 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h1><p>样式存在 <code>web/src/style</code> 目录下，结构如下</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├─theme</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ├─dark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scss</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 暗黑主题</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ├─index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scss</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ├─light</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">css</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 默认主题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├─element</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scss</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Element 样式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├─index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scss</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // scss 入口</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├─tailwind</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">css</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // tailwindcss</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├─var</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scss</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 自定义变量</span></span></code></pre></div><p>样式上好像并没有什么可以说的了， <code>style</code> 目录的样式都是全局样式。 还有一点就是目前后台的样式是响应式的，基于 <code>tailwindcss</code> 做的，<code>tailwindcss</code> 还是很方便的。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>其实用到全局样式的地方不是很多，一般还是在 vue 文件中使用 scope 来改样式</p></div>`,5),e=[l];function h(p,k,d,c,r,o){return a(),i("div",null,e)}const y=s(n,[["render",h]]);export{g as __pageData,y as default};
